Comment:
  description: Contains all SQL queries related to the Comment entity.
  queries:
####### Query comment #######
    - name: GetAllComments
      description: Retrieve all comments.
      path: comment/get_all_comments
      access: [admin]
      parameters: []
      result:
        type: DataTable # Query
        returnsMany: true
        columns:
          - name: commentId
            type: string
          - name: content
            type: string
          - name: author
            type: string # User
            format: username
          - name: dateCreated
            type: string
            format: date
          - name: reactions
            type: array # Reaction
            items:
              type: string
              format: reactionId

    - name: GetCommentByReviewId
      description: Retrieve a specific comment by review ID.
      path: comment/get_comment_by_reviewid
      access: [admin, user]
      parameters:
        - name: "@ReviewId"
          type: string
          required: true
        - name: "@CommentId"
          type: string
          required: true
      result:
        type: DataTable # Query
        returnsMany: false
        columns:
          - name: commentId
            type: string
          - name: content
            type: string
          - name: author
            type: string # User
            format: username
          - name: dateCreated
            type: string
            format: date
          - name: reactions
            type: array # Reaction
            items:
              type: string
              format: reactionId

    - name: GetAllCommentsByReviewId
      description: Retrieve all comments by a specific review ID.
      path: comment/get_all_comments_by_reviewid
      access: [admin, user]
      parameters:
        - name: "@ReviewId"
          type: string
          required: true
      result:
        type: DataTable # Query
        returnsMany: true
        columns:
          - name: commentId
            type: string
          - name: content
            type: string
          - name: author
            type: string # User
            format: username
          - name: dateCreated
            type: string
            format: date
          - name: reactions
            type: array # Reaction
            items:
              type: string
              format: reactionId
    
    - name: GetAllCommentsByReviewIdWithDate
      description: Retrieve all comments by a specific review ID with date filtering.
      path: comment/get_all_comments_by_reviewid_with_date
      access: [admin, user]
      parameters:
        - name: "@ReviewId"
          type: string
          required: true
        - name: "@StartDate"
          type: string
          required: true
        - name: "@EndDate"
          type: string
          required: true
      result:
        type: DataTable # Query
        returnsMany: true
        columns:
          - name: commentId
            type: string
          - name: content
            type: string
          - name: author
            type: string # User
            format: username
          - name: dateCreated
            type: string
            format: date
          - name: reactions
            type: array # Reaction
            items:
              type: string
              format: reactionId

    - name: GetAllCommentsByUsername
      description: Retrieve all comments made by a specific username.
      path: comment/get_all_comments_by_username
      access: [admin, user]
      parameters:
        - name: "@Username"
          type: string
          required: true
      result:
        type: DataTable # Query
        returnsMany: true
        columns:
          - name: commentId
            type: string
          - name: content
            type: string
          - name: author
            type: string # User
            format: username
          - name: dateCreated
            type: string
            format: date
          - name: reactions
            type: array # Reaction
            items:
              type: string
              format: reactionId
    
    - name: GetAllCommentsByUsernameWithDate
      description: Retrieve all comments made by a specific username with date filtering.
      path: comment/get_all_comments_by_username_with_date
      access: [admin, user]
      parameters:
        - name: "@Username"
          type: string
          required: true
        - name: "@StartDate"
          type: string
          required: true
        - name: "@EndDate"
          type: string
          required: true
      result:
        type: DataTable # Query
        returnsMany: true
        columns:
          - name: commentId
            type: string
          - name: content
            type: string
          - name: author
            type: string # User
            format: username
          - name: dateCreated
            type: string
            format: date
          - name: reactions
            type: array # Reaction
            items:
              type: string
              format: reactionId

    - name: GetAllCommentsByReviewIdAndUsername
      description: Retrieve all comments for a specific review ID made by a specific username.
      path: comment/get_all_comments_by_reviewid_and_username
      access: [admin, user]
      parameters:
        - name: "@ReviewId"
          type: string
          required: true
        - name: "@Username"
          type: string
          required: true
      result:
        type: DataTable # Query
        returnsMany: true
        columns:
          - name: commentId
            type: string
          - name: content
            type: string
          - name: author
            type: string # User
            format: username
          - name: dateCreated
            type: string
            format: date
          - name: reactions
            type: array # Reaction
            items:
              type: string
              format: reactionId
    
    - name: GetAllCommentsByReviewIdAndUsernameWithDate
      description: Retrieve all comments for a specific review ID made by a specific username with date
      path: comment/get_all_comments_by_reviewid_and_username_with_date
      access: [admin, user]
      parameters:
        - name: "@ReviewId"
          type: string
          required: true
        - name: "@Username"
          type: string
          required: true
        - name: "@StartDate"
          type: string
          required: true
        - name: "@EndDate"
          type: string
          required: true
      result:
        type: DataTable # Query
        returnsMany: true
        columns:
          - name: commentId
            type: string
          - name: content
            type: string
          - name: author
            type: string # User
            format: username
          - name: dateCreated
            type: string
            format: date
          - name: reactions
            type: array # Reaction
            items:
              type: string
              format: reactionId
          

####### Non-query comment #######
    - name: InsertComment
      description: Insert a new comment into the database.
      path: comment/insert_comment
      access: [admin, user]
      parameters:
        - name: "@Content"
          type: string
          required: true
        - name: "@Username"
          type: string
          required: true
        - name: "@ReviewId"
          type: string
          required: true
      result:
        type: affected_rows # NonQuery
        datatype: int
    
    - name: UpdateCommentByUser
      description: Update an existing comment by a user.
      path: comment/update_comment_by_user
      access: [admin, user]
      parameters:
        - name: "@ReviewId"
          type: string
          required: true
        - name: "@CommentId"
          type: string
          required: true
        - name: "@Content"
          type: string
          required: true
        - name: "@Username"
          type: string
          required: true
      result:
        type: affected_rows # NonQuery
        datatype: int

    - name: UpdateCommentByAdmin
      description: Update an existing comment by an admin.
      path: comment/update_comment_by_admin
      access: [admin]
      parameters:
        - name: "@ReviewId"
          type: string
          required: true
        - name: "@CommentId"
          type: string
          required: true
        - name: "@Content"
          type: string
          required: true
      result:
        type: affected_rows # NonQuery
        datatype: int

    - name: DeleteCommentByUser
      description: Delete a comment by a user.
      path: comment/delete_comment_by_user
      access: [admin, user]
      parameters:
        - name: "@ReviewId"
          type: string
          required: true
        - name: "@CommentId"
          type: string
          required: true
        - name: "@Username"
          type: string
          required: true
      result:
        type: affected_rows # NonQuery
        datatype: int
    
    - name: DeleteCommentByAdmin
      description: Delete a comment by an admin.
      path: comment/delete_comment_by_admin
      access: [admin]
      parameters:
        - name: "@ReviewId"
          type: string
          required: true
        - name: "@CommentId"
          type: string
          required: true
      result:
        type: affected_rows # NonQuery
        datatype: int
    
    - name: DeleteAllCommentsByReviewIdByUser
      description: Delete all comments for a specific review ID made by a user.
      path: comment/delete_all_comments_by_reviewid_by_user
      access: [admin, user]
      parameters:
        - name: "@ReviewId"
          type: string
          required: true
        - name: "@Username"
          type: string
          required: true
      result:
        type: affected_rows # NonQuery
        datatype: int

    - name: DeleteAllCommentsByReviewIdByAdmin
      description: Delete all comments for a specific review ID made by an admin.
      path: comment/delete_all_comments_by_reviewid_by_admin
      access: [admin]
      parameters:
        - name: "@ReviewId"
          type: string
          required: true
      result:
        type: affected_rows # NonQuery
        datatype: int
    
    - name: DeleteAllCommentsByUsername
      description: Delete all comments made by a specific username.
      path: comment/delete_all_comments_by_username
      access: [admin, user]
      parameters:
        - name: "@Username"
          type: string
          required: true
      result:
        type: affected_rows # NonQuery
        datatype: int

####### Scalar queries comment #######
    - name: CountComments
      description: Count the total number of comments.
      path: comment/count_comments
      access: [admin] 
      parameters: []
      result:
        type: scalar # Count, Sum, Min, Max
        datatype: int  # Returns the total count of comments

    - name: CountCommentsWithDate
      description: Count the total number of comments with date filtering.
      path: comment/count_comments_with_date
      access: [admin]
      parameters:
        - name: "@StartDate"
          type: string
          required: true
        - name: "@EndDate"
          type: string
          required: true
      result:
        type: scalar # Count, Sum, Min, Max
        datatype: int  # Returns the total count of comments within the date range

    - name: CountCommentsByReviewId
      description: Count the total number of comments for a specific review ID.
      path: comment/count_comments_by_reviewid
      access: [admin, user]
      parameters:
        - name: "@ReviewId"
          type: string
          required: true
      result:
        type: scalar # Count, Sum, Min, Max
        datatype: int  # Returns the total count of comments for the review ID 

    - name: CountCommentsByReviewIdWithDate
      description: Count the total number of comments for a specific review ID within a date range.
      path: comment/count_comments_by_reviewid_with_date  
      access: [admin, user]
      parameters:
        - name: "@ReviewId"
          type: string
          required: true
        - name: "@StartDate"
          type: string
          required: true
        - name: "@EndDate"
          type: string
          required: true
      result:
        type: scalar # Count, Sum, Min, Max
        datatype: int  # Returns the total count of comments for the review ID within the date range

    - name: CountCommentsByUsername
      description: Count the total number of comments made by a specific username.
      path: comment/count_comments_by_username
      access: [admin, user]
      parameters:
        - name: "@Username"
          type: string
          required: true
      result:
        type: scalar # Count, Sum, Min, Max
        datatype: int  # Returns the total count of comments made by the username

    - name: CountCommentsByUsernameWithDate
      description: Count the total number of comments made by a specific username within a date range
      path: comment/count_comments_by_username_with_date
      access: [admin, user]
      parameters:
        - name: "@Username"
          type: string
          required: true
        - name: "@StartDate"
          type: string
          required: true
        - name: "@EndDate"
          type: string
          required: true
      result:
        type: scalar # Count, Sum, Min, Max
        datatype: int  # Returns the total count of comments made by the username within the date range

    - name: CountCommentsByReviewIdAndUsername
      description: Count the total number of comments for a specific review ID made by a specific username
      path: comment/count_comments_by_reviewid_and_username
      access: [admin, user]
      parameters:
        - name: "@ReviewId"
          type: string
          required: true
        - name: "@Username"
          type: string
          required: true
      result:
        type: scalar # Count, Sum, Min, Max
        datatype: int  # Returns the total count of comments for the review ID made by the username

    - name: CountCommentsByReviewIdAndUsernameWithDate
      description: Count the total number of comments for a specific review ID made by a specific username within a date range
      path: comment/count_comments_by_reviewid_and_username_with_date
      access: [admin, user]
      parameters:
        - name: "@ReviewId"
          type: string
          required: true
        - name: "@Username"
          type: string
          required: true
        - name: "@StartDate"
          type: string
          required: true
        - name: "@EndDate"
          type: string
          required: true
      result:
        type: scalar # Count, Sum, Min, Max
        datatype: int  # Returns the total count of comments for the review ID within the date range  
